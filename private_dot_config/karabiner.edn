{
 :profiles {:Default {;; "default true means" rules default goes into this rule if no profiles specified
                      :default true
                      ;; simultaneous_threshold_milliseconds
                      ;; within x will be registered as simultaneous
                      :sim     50
                      ;; to_delayed_action_delay_milliseconds
                      ;; after x will be registered as delayed
                      :delay   250
                      ;; to_if_alone_timeout_milliseconds
                      ;; within x will be registered as alone
                      :alone   500
                      ;; to_if_held_down_threshold_milliseconds
                      ;; after x will be registered again
                      :held    250}}

 :devices {:internal-keyboard [{:vendor_id 1452 :product_id 832}]}

 :applications {:finder
                ["^com.apple.finder"]
                :terminal
                ["^com\\.apple\\.Terminal$",
                 "^com\\.googlecode\\.iterm2$",
                 "^co\\.zeit\\.hyperterm$",
                 "^co\\.zeit\\.hyper$",
                 "^io\\.alacritty$",
                 "^net\\.kovidgoyal\\.kitty$"]
                :web-browser
                ["^org\\.mozilla\\.firefox$",
                 "^org\\.mozilla\\.nightly$",
                 "^com\\.microsoft\\.Edge",
                 "^com\\.google\\.Chrome$",
                 "^com\\.brave\\.Browser$",
                 "^com\\.apple\\.Safari$"]
                :other-unknown
                ["^com\\.microsoft\\.rdc$",
                 "^com\\.microsoft\\.rdc\\.mac$",
                 "^com\\.microsoft\\.rdc\\.macos$",
                 "^com\\.microsoft\\.rdc\\.osx\\.beta$",
                 "^net\\.sf\\.cord$",
                 "^com\\.thinomenon\\.RemoteDesktopConnection$",
                 "^com\\.itap-mobile\\.qmote$",
                 "^com\\.nulana\\.remotixmac$",
                 "^com\\.p5sys\\.jump\\.mac\\.viewer$",
                 "^com\\.p5sys\\.jump\\.mac\\.viewer\\.web$",
                 "^com\\.teamviewer\\.TeamViewer$",
                 "^com\\.vmware\\.horizon$",
                 "^com\\.2X\\.Client\\.Mac$",
                 "^com\\.vmware\\.fusion$",
                 "^com\\.vmware\\.horizon$",
                 "^com\\.vmware\\.view$",
                 "^com\\.parallels\\.desktop$",
                 "^com\\.parallels\\.vm$",
                 "^com\\.parallels\\.desktop\\.console$",
                 "^org\\.virtualbox\\.app\\.VirtualBoxVM$",
                 "^com\\.citrix\\.XenAppViewer$",
                 "^com\\.vmware\\.proxyApp\\.",
                 "^com\\.parallels\\.winapp\\."]}

 :input-sources {}

 :templates {:shell "osascript -e 'do shell script \"%s\"'"}

 :modifiers {}

 :froms {}

 :tos {}

 ; :layers {}

 ; :simlayers {}
 ; :simlayer-threshold 250

 :main
 ;; [<from> <to>]
 ;; [<from> <to> <conditions>]
 ;; [<from> <to> <conditions> <other options>]

 ;; <from> can be keywords defined in froms or keycodes without `{:not-from true}`
 ;; <to> can be keywords defined in tos, keycodes without `{:not-to true}`, string (shell script)
 ;; <conditions> can be keywords defined in layers, devices, applications
 ;; <other options>
 ;;   to_if_alone                                    | :alone
 ;;   to_if_held_down                                | :held
 ;;   to_after_key_up                                | :afterup
 ;;   to_delayed_action                              | :delayed
 ;;     to_if_canceled                               |   :canceled
 ;;     to_if_invoked                                |   :invoked
 ;;   parameters                                     | :params
 ;;     basic.to_if_alone_timeout_milliseconds       |   :alone
 ;;     basic.to_if_held_down_threshold_milliseconds |   :held
 ;;     basic.to_delayed_action_delay_milliseconds   |   :delay
 ;;     basic.simultaneous_threshold_milliseconds    |   :sim
 [
  {:des "Internal Keyboard: Caps Lock => Esc (Tap) / Ctrl (Hold)"
   :rules [[:##caps_lock :left_control [:internal-keyboard] {:alone :escape}]]}
  {:des "Internal Keyboard: Left Ctrl => Left Cmd"
   :rules [[:##left_control :left_command [:internal-keyboard]]]}
  {:des "Internal Keyboard: Command <=> Option"
   :rules [:internal-keyboard
           [:##left_command :left_option]
           [:##left_option :left_command]
           [:##right_command :right_option]
           [:##right_option :right_command]]}
  {:des "Internal Keyboard: Backtick => Esc (Hold)"
   :rules [[:##grave_accent_and_tilde nil [:internal-keyboard] {:alone :grave_accent_and_tilde :held :escape}]]}
  {:des "Internal Keyboard: Fn-Layer"
   :rules [:internal-keyboard
           [:!FT#SSh :!Oleft_arrow]
           [:!FT#SSj :!Odown_arrow]
           [:!FT#SSk :!Oup_arrow]
           [:!FT#SSl :!Oright_arrow]
           [:!F##h :left_arrow]
           [:!F##j :down_arrow]
           [:!F##k :up_arrow]
           [:!F##l :right_arrow]
           [:!FT#SSa :!Oleft_arrow]
           [:!FT#SSs :!Odown_arrow]
           [:!FT#SSw :!Oup_arrow]
           [:!FT#SSd :!Oright_arrow]
           [:!F##a :left_arrow]
           [:!F##s :down_arrow]
           [:!F##w :up_arrow]
           [:!F##d :right_arrow]
           [:!F1 :f1] [:!F2 :f2] [:!F3 :f3]
           [:!F4 :f4] [:!F5 :f5] [:!F6 :f6]
           [:!F7 :f7] [:!F8 :f8] [:!F9 :f9]
           [:!F0 :f10] [:!Fhyphen :f11] [:!Fequal_sign :f12]
           [:!F##backslash :delete_forward]]}

  {:des "Ctrl+A => Cmd+A (Select All)"
   :rules [[:!TTa :!Ca [:!terminal :!other-unknown]]]}
  {:des "Ctrl+{C,V,X} => Cmd+{C,V,X} (Copy,Paste,Cut)"
   :rules [[:!TTc :!Cc [:!terminal :!other-unknown]]
           [:!TTv :!Cv [:!terminal :!other-unknown]]
           [:!TTx :!Cx [:!terminal :!other-unknown]]]}
  {:des "Ctrl+Z, Ctrl+Y => Cmd+Z (Undo), Cmd+Shift+Z (Redo)"
   :rules [[:!TTz :!Cz [:!terminal :!other-unknown]]
           [:!TTy :!CSz [:!terminal :!other-unknown]]]}
  {:des "Ctrl+S => Cmd+S (Save)"
   :rules [[:!TTs :!Cs [:!terminal :!other-unknown]]]}
  {:des "Ctrl+{B,I} => Cmd+{B,I} (Bold,Italic)"
   :rules [[:!TTb :!Cb [:!terminal]]
           [:!TTi :!Ci [:!terminal]]]}
  {:des "Ctrl+(Shift)+N => Cmd+(Shift)+N (New)"
   :rules [[:!TT#SSn :!Cn [:!terminal :!other-unknown]]]}
  {:des "Ctrl+F => Cmd+F (Find)"
   :rules [[:!TTf :!Cf [:!terminal :!other-unknown]]]}
  {:des "Ctrl+W => Cmd+W (Close)"
   :rules [[:!TTw :!Cw [:!terminal :!other-unknown]]]}
  {:des "Ctrl+(Shift)+T => Cmd+(Shift)+T (New tab)"
   :rules [[:!TT#SSt :!Ct [:!terminal]]]}
  {:des "(Shift)+F5 => Cmd+(Shift)+R (Reload)"
   :rules [[:#SSf5 :!Cr [:!terminal :!other-unknown]]]}
  {:des "Alt+F4 => Cmd+Q (Quit)"
   :rules [[:!OOf4 :!Cq [:!terminal :!other-unknown]]]}
  {:des "Alt+(Shift)+Tab => Cmd+(Shift)+Tab (Switch application)"
   :rules [[:!OO#SStab :!Ctab]]}

  ; ; issue with shorthand syntax: https://github.com/yqrashawn/GokuRakuJoudo/issues/115
  ; ; does not work anymore anyway
  ; {:des "Ctrl+Left Click => Cmd+Left Click (select multiple items)"
  ;  :rules [[{:pkey :button1 :modi :control} {:pkey :button1 :modi :command}]]}

  {:des "(Shift)+{Home,End} => Cmd+(Shift)+{Left,Right} arrow (Move cursor to beginning/end of line w/ or w/o selection)"
   :rules [[:#SShome :!Cleft_arrow [:!terminal]]
           [:#SSend :!Cright_arrow [:!terminal]]]}
  {:des "Ctrl+(Shift)+{Home,End} => Cmd+(Shift)+{Up,Down} arrow (Move cursor to beginning/end of file w/ or w/o selection)"
   :rules [[:!TT#SShome :!Cup_arrow [:!terminal]]
           [:!TT#SSend :!Cdown_arrow [:!terminal]]]}
  {:des "Ctrl+(Shift)+{Up,Left,Down,Right} arrow => Option+(Shift)+{Up,Left,Down,Right} arrow (Move cursor over line/word w/ or w/o selection)"
   :rules [[:!TT#SSup_arrow :!Oup_arrow [:!terminal :!other-unknown]]
           [:!TT#SSleft_arrow :!Oleft_arrow [:!terminal :!other-unknown]]
           [:!TT#SSdown_arrow :!Odown_arrow [:!terminal :!other-unknown]]
           [:!TT#SSright_arrow :!Oright_arrow [:!terminal :!other-unknown]]]}
  {:des "Ctrl+{Backspace,Delete} => Option+{Backspace,Delete} (Delete word backward/forward)"
   :rules [[:!TTdelete_or_backspace :!Odelete_or_backspace [:!terminal :!other-unknown]]
           [:!TTdelete_forward :!Odelete_forward [:!terminal :!other-unknown]]]}

  {:des "Ctrl+L => Cmd+L (Focus URL Bar) (Only in browsers)"
   :rules [[:!TTl :!Cl [:web-browser]]]}
  {:des "Ctrl+(Shift)+R => Cmd+(Shift)+R (Refresh Tab) (Only in browsers)"
   :rules [[:!TT#SSr :!Cr [:web-browser]]]}

  {:des "Return => Cmd+O (Open) (Only in Finder)"
   :rules [[:return_or_enter :!Co [:finder]]]}
  {:des "F2 => Return (Rename) (Only in Finder)"
   :rules [[:f2 :return_or_enter [:finder]]]}
  {:des "Delete => Cmd+Backspace (Delete) (Only in Finder)"
   :rules [[:delete_forward :!Cdelete_or_backspace [:finder]]]}
  {:des "Alt+Up arrow, Alt+{Left,Right} arrow => Cmd+Up arrow (Up), Cmd+{[,]} (Back,Forward) (Only in Finder)"
   :rules [[:!OOup_arrow :!Cup_arrow [:finder]]
           [:!OOleft_arrow :!Copen_bracket [:finder]]
           [:!OOright_arrow :!Cclose_bracket [:finder]]]}

  {:des "Ctrl+Esc => Open Launchpad"
   :rules [[:!TTescape :launchpad [:!other-unknown]]]}
  {:des "Ctrl+Shift+Esc => Open Activity Monitor"
   :rules [[:!TTSSescape "open -b com.apple.ActivityMonitor" [:!other-unknown]]]}
  {:des "Cmd+L => Start ScreenSaver (and Lock)",
   :rules [[:!CCl "open -a ScreenSaverEngine"]]}
  {:des "Cmd+Shift+L => Sleep Display",
   :rules [[:!CCSSl "pmset displaysleepnow"]]}
  ]

  ;; C  T  O  S  ->  left_{command, control, option, shift}
  ;; Q  W  E  R  -> right_{command, control, option, shift}
  ;; CC TT OO SS ->       {command, control, option, shift}
  ;; F  P        -> fn, caps_lock
  ;; !  #  ##    -> mandatory, optional, optional any
  ;; !!          -> mandatory left_{command+control+option+shift}
  ;; !!A         -> mandatory      {command+control+option+shift}
  :cheatsheet {}
}
