env:
  TERM: xterm-256color

window:
  dimensions:
    columns: 120
    lines: 40
  # position:
  #   x: 0
  #   y: 0
  padding:
    x: 2
    y: 0
  dynamic_padding: true
  decorations: none # full / none
  startup_mode: Windowed # Windowed / Maximized / Fullscreen

# title: Alacritty

# class:
  # instance: Alacritty
  # general: Alacritty

# gtk_theme_variant: dark # dark / light / None

scrolling:
  history: 100000
  multiplier: 3

# tabspaces: 8

font:
  normal:
    family: JetBrainsMono Nerd Font
    # style: Regular
  # bold:
    # family: monospace
    # style: Bold
  # italic:
    # family: monospace
    # style: Italic
  # bold_italic:
    # family: monospace
    # style: Bold Italic
  size: 13.0
  # offset:
    # x: 0
    # y: 0
  # glyph_offset:
    # x: 0
    # y: 0
  # use_thin_strokes: true

draw_bold_text_with_bright_colors: true

schemes:
  gruvbox_dark: &gruvbox_dark
    primary:
      background:        '#1d2021'
      foreground:        '#fbf1c7'
      bright_foreground: '#f9f5d7'
      dim_foreground:    '#f2e5bc'
    # cursor:
      # text:   ''
      # cursor: ''
    # selection:
      # text:       ''
      # background: ''
    bright:
      black:   '#1d2021'
      red:     '#fb4934'
      green:   '#b8bb26'
      yellow:  '#fabd2f'
      blue:    '#83a598'
      magenta: '#d3869b'
      cyan:    '#8ec07c'
      white:   '#f9f5d7'
    normal:
      black:   '#282828'
      red:     '#cc241d'
      green:   '#98971a'
      yellow:  '#d79921'
      blue:    '#458588'
      magenta: '#b16286'
      cyan:    '#689d6a'
      white:   '#fbf1c7'
    dim:
      black:   '#32302f'
      red:     '#9d0006'
      green:   '#79740e'
      yellow:  '#b57614'
      blue:    '#076678'
      magenta: '#8f3f71'
      cyan:    '#427b58'
      white:   '#f2e5bc'
    # indexed_colors: []
  onedar: &onedark
    primary:
      foreground:        '#abb2bf'
      background:        '#282c34'
      # dim_foreground:    ''
      # bright_foreground: ''
    cursor:
      text:   '#5c6370'
      cursor: '#abb2bf'
    # selection:
      # text:       ''
      # background: ''
    bright:
      black:   '#4b5263'
      red:     '#be5046'
      green:   '#98c379'
      yellow:  '#d19a66'
      blue:    '#61afef'
      magenta: '#c678dd'
      cyan:    '#56b6c2'
      white:   '#3e4452'
    normal:
      black:   '#5c6370'
      red:     '#e06c75'
      green:   '#98c379'
      yellow:  '#e5c07b'
      blue:    '#61afef'
      magenta: '#c678dd'
      cyan:    '#56b6c2'
      white:   '#abb2bf'
    # dim:
      # black:   '#5c6370'
      # red:     '#e06c75'
      # green:   '#98c379'
      # yellow:  '#d19a66'
      # blue:    '#528bff'
      # magenta: '#c678dd'
      # cyan:    '#56b6c2'
      # white:   '#abb2bf'
    # indexed_colors: []
colors: *gruvbox_dark

# visual_bell:
  # animation: EaseOutExpo # Ease, EaseOut, EaseOutSine, EaseOutQuad, EaseOutCubic, EaseOutQuart, EaseOutQuint, EaseOutExpo, EaseOutCirc, Linear
  # duration: 0
  # color: '#ffffff'

background_opacity: 1.0

selection:
  # semantic_escape_chars: ",â”‚`|:\"' ()[]{}<>\t"
  save_to_clipboard: true

dynamic_title: true

cursor:
  style: Block # Block, Underline, Beam
  unfocused_hollow: true

live_config_reload: true

shell:
  program: /bin/sh
  args:
    - -l
    - -c
    - "tmux attach || tmux"

# working_directory: None

# winpty_backend: false

# alt_send_esc: true

# mouse:
  # double_click: { threshold: 300 }
  # triple_click: { threshold: 300 }
  # hide_when_typing: false
  # url:
    # launcher:
      # program: xdg-open
      # args: []
    # modifiers: None

# Mouse bindings
#
# Mouse bindings are specified as a list of objects, much like the key
# bindings further below.
#
# To trigger mouse bindings when an application running within Alacritty captures the mouse, the
# `Shift` modifier is automatically added as a requirement.
#
# Each mouse binding will specify a:
#
# - `mouse`:
#
#   - Middle
#   - Left
#   - Right
#   - Numeric identifier such as `5`
#
# - `action` (see key bindings)
#
# And optionally:
#
# - `mods` (see key bindings)
# mouse_bindings:
  # - { mouse: Middle, action: PasteSelection }

# Key bindings
#
# Key bindings are specified as a list of objects. For example, this is the
# default paste binding:
#
# `- { key: V, mods: Control|Shift, action: Paste }`
#
# Each key binding will specify a:
#
# - `key`: Identifier of the key pressed
#
#    - A-Z
#    - F1-F24
#    - Key0-Key9
#
#    A full list with available key codes can be found here:
#    https://docs.rs/glutin/*/glutin/event/enum.VirtualKeyCode.html#variants
#
#    Instead of using the name of the keys, the `key` field also supports using
#    the scancode of the desired key. Scancodes have to be specified as a
#    decimal number. This command will allow you to display the hex scancodes
#    for certain keys:
#
#       `showkey --scancodes`.
#
# Then exactly one of:
#
# - `chars`: Send a byte sequence to the running application
#
#    The `chars` field writes the specified string to the terminal. This makes
#    it possible to pass escape sequences. To find escape codes for bindings
#    like `PageUp` (`"\x1b[5~"`), you can run the command `showkey -a` outside
#    of tmux. Note that applications use terminfo to map escape sequences back
#    to keys. It is therefore required to update the terminfo when changing an
#    escape sequence.
#
# - `action`: Execute a predefined action
#
#   - Copy
#   - Paste
#   - PasteSelection
#   - IncreaseFontSize
#   - DecreaseFontSize
#   - ResetFontSize
#   - ScrollPageUp
#   - ScrollPageDown
#   - ScrollLineUp
#   - ScrollLineDown
#   - ScrollToTop
#   - ScrollToBottom
#   - ClearHistory
#   - Hide
#   - Minimize
#   - Quit
#   - ToggleFullscreen
#   - SpawnNewInstance
#   - ClearLogNotice
#   - ReceiveChar
#   - None
#
#   (macOS only):
#   - ToggleSimpleFullscreen: Enters fullscreen without occupying another space
#
# - `command`: Fork and execute a specified command plus arguments
#
#    The `command` field must be a map containing a `program` string and an
#    `args` array of command line parameter strings. For example:
#       `{ program: "alacritty", args: ["-e", "vttest"] }`
#
# And optionally:
#
# - `mods`: Key modifiers to filter binding actions
#
#    - Command
#    - Control
#    - Option
#    - Super
#    - Shift
#    - Alt
#
#    Multiple `mods` can be combined using `|` like this:
#       `mods: Control|Shift`.
#    Whitespace and capitalization are relevant and must match the example.
#
# - `mode`: Indicate a binding for only specific terminal reported modes
#
#    This is mainly used to send applications the correct escape sequences
#    when in different modes.
#
#    - AppCursor
#    - AppKeypad
#    - Alt
#
#    A `~` operator can be used before a mode to apply the binding whenever
#    the mode is *not* active, e.g. `~Alt`.
#
# Bindings are always filled by default, but will be replaced when a new
# binding with the same triggers is defined. To unset a default binding, it can
# be mapped to the `ReceiveChar` action. Alternatively, you can use `None` for
# a no-op if you do not wish to receive input characters for that binding.
#
# If the same trigger is assigned to multiple actions, all of them are executed
# at once.
# key_bindings:
  # (Windows, Linux, and BSD only)
  # - { key: V,        mods: Control|Shift, action: Paste            }
  # - { key: C,        mods: Control|Shift, action: Copy             }
  # - { key: Insert,   mods: Shift,         action: PasteSelection   }
  # - { key: Key0,     mods: Control,       action: ResetFontSize    }
  # - { key: Equals,   mods: Control,       action: IncreaseFontSize }
  # - { key: Add,      mods: Control,       action: IncreaseFontSize }
  # - { key: Subtract, mods: Control,       action: DecreaseFontSize }
  # - { key: Minus,    mods: Control,       action: DecreaseFontSize }

  # (Windows only)
  # - { key: Return,   mods: Alt,           action: ToggleFullscreen }

  # (macOS only)
  # - { key: Key0,   mods: Command,         action: ResetFontSize    }
  # - { key: Equals, mods: Command,         action: IncreaseFontSize }
  # - { key: Add,    mods: Command,         action: IncreaseFontSize }
  # - { key: Minus,  mods: Command,         action: DecreaseFontSize }
  # - { key: K,      mods: Command,         action: ClearHistory     }
  # - { key: K,      mods: Command,         chars: "\x0c"            }
  # - { key: V,      mods: Command,         action: Paste            }
  # - { key: C,      mods: Command,         action: Copy             }
  # - { key: H,      mods: Command,         action: Hide             }
  # - { key: M,      mods: Command,         action: Minimize         }
  # - { key: Q,      mods: Command,         action: Quit             }
  # - { key: W,      mods: Command,         action: Quit             }
  # - { key: F,      mods: Command|Control, action: ToggleFullscreen }

  # - { key: Paste,                    action: Paste                            }
  # - { key: Copy,                     action: Copy                             }
  # - { key: L,         mods: Control, action: ClearLogNotice                   }
  # - { key: L,         mods: Control, chars: "\x0c"                            }
  # - { key: PageUp,    mods: Shift,   action: ScrollPageUp,   mode: ~Alt       }
  # - { key: PageDown,  mods: Shift,   action: ScrollPageDown, mode: ~Alt       }
  # - { key: Home,      mods: Shift,   action: ScrollToTop,    mode: ~Alt       }
  # - { key: End,       mods: Shift,   action: ScrollToBottom, mode: ~Alt       }

# debug:
  # render_timer: false
  # persistent_logging: false
  # log_level: Warn # None, Error, Warn, Info, Debug, Trace
  # print_events: false
