#!/usr/bin/env bash

function str_repeat() {
  local -r str="$1"
  local -r n="$2"

  echo "$(printf '%*s' "${n}" | tr ' ' "${str}")"
}

function str_box() {
  local -r str="$1"
  local -r str_len=$(( 4 + ${#str} ))
  local -r char="${2:-"*"}"

  str_repeat $char $str_len
  echo "$char $str $char"
  str_repeat $char $str_len
}

{{ if eq .chezmoi.os "linux" }}

if type apt >/dev/null 2>&1; then
  function update_cache() {
    echo ""
    echo "Updating APT Cache..."
    echo ""
    sudo apt update
  }

  update_cache

  declare APT_PACKAGES=()
  APT_PACKAGES+=(curl fd-find filezilla git gpa)
  APT_PACKAGES+=(gparted grc htop jq neofetch)
  APT_PACKAGES+=(rar unrar shellcheck tree vim zsh)
  APT_PACKAGES+=(software-properties-common)

  echo ""
  str_box "Installing APT Packages" "="
  echo ""
  echo "${APT_PACKAGES[@]}"
  echo ""
  sudo apt install --yes "${APT_PACKAGES[@]}"

  declare APT_REPOSITORIES=(
    ppa:mmstick76/alacritty
  )

  for apt_repo in "${APT_REPOSITORIES[@]}"; do
    echo ""
    echo "Adding APT Repository: ${apt_repo}"
    echo ""
    sudo add-apt-repository --yes --no-update "${apt_repo}"
  done

  update_cache

  declare THIRD_PARTY_APT_PACKAGES=()
  THIRD_PARTY_APT_PACKAGES+=(alacritty)

  echo ""
  str_box "Installing APT Packages (3rd Party)" "="
  echo ""
  echo "${THIRD_PARTY_APT_PACKAGES[@]}"
  echo ""
  sudo apt install --yes "${THIRD_PARTY_APT_PACKAGES[@]}"
fi

if type snap >/dev/null 2>&1; then
  declare SNAP_CLASSIC_PACKAGES=()
  SNAP_CLASSIC_PACKAGES+=(asciinema code go)

  echo ""
  str_box "Installing Snap Packages (classic)" "="
  echo ""
  echo "${SNAP_CLASSIC_PACKAGES[@]}"
  echo ""

  for package in "${SNAP_CLASSIC_PACKAGES[@]}"; do
    snap install "${package}" --classic
  done

  declare SNAP_PACKAGES=()
  SNAP_PACKAGES+=(authy bucklespring hugo opera postman)
  SNAP_PACKAGES+=(vlc)

  echo ""
  str_box "Installing Snap Packages (strict)" "="
  echo ""
  echo "${SNAP_PACKAGES[@]}"
  echo ""

  for package in "${SNAP_PACKAGES[@]}"; do
    snap install "${package}"
  done
fi

declare NECESSARY_DIRECTORIES=(
  "~/.config/nano/backup"
)
echo ""
str_box "Creating Necessary Directories" "="
echo ""
printf '> %s\n' "${NECESSARY_DIRECTORIES[@]}"
echo ""

mkdir -p "${NECESSARY_DIRECTORIES[@]}"

{{ end }}

