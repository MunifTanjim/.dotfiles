# vim: set filetype=tmux foldmethod=marker :

# remap prefix
set -g prefix C-a

# enable mouse support
set -g mouse on

# start windows and panes at 1, not 0
set -g base-index 1
set -g -w pane-base-index 1

# sync windows number on create/destroy
set -g renumber-windows on

# vi mode keys for navigation
set -g -w mode-keys vi

# toggle synchronize-panes
bind C-x setw synchronize-panes

# copy-mode begin-selection with v
bind -T copy-mode-vi v send-keys -X begin-selection

# navigate across tmux-vim
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

bind -Troot C-w if-shell "$is_vim" "send-keys C-w" "switch-client -Tnav; refresh-client -S"

bind -Tnav C-w send-keys 'C-w'

# {{{ keybinds: select-pane
bind -Tnav h   select-pane -L
bind       h   select-pane -L
bind -Tnav C-h select-pane -L
bind       C-h select-pane -L
bind -Tnav j   select-pane -D
bind       j   select-pane -D
bind -Tnav C-j select-pane -D
bind       C-j select-pane -D
bind -Tnav k   select-pane -U
bind       k   select-pane -U
bind -Tnav C-k select-pane -U
bind       C-k select-pane -U
bind -Tnav l   select-pane -R
bind       l   select-pane -R
bind -Tnav C-l select-pane -R
bind       C-l select-pane -R
# keybinds: select-pane }}}

# {{{ keybinds: split-window
bind -Tnav "\\" split-window -h  -c "#{pane_current_path}" # vertical
bind       "\\" split-window -h  -c "#{pane_current_path}" # vertical
bind -Tnav "|"  split-window -fh -c "#{pane_current_path}" # full vertical
bind       "|"  split-window -fh -c "#{pane_current_path}" # full vertical
bind -Tnav "-"  split-window -v  -c "#{pane_current_path}" # horizontal
bind       "-"  split-window -v  -c "#{pane_current_path}" # horizontal
bind -Tnav "_"  split-window -fv -c "#{pane_current_path}" # full horizontal
bind       "_"  split-window -fv -c "#{pane_current_path}" # full horizontal
# keybinds: split-window }}}

# {{{ keybinds: resize-pane
bind -r -Tnav M-h resize-pane -L 10
bind -r       M-h resize-pane -L 10
bind -r -Tnav M-j resize-pane -D 5
bind -r       M-j resize-pane -D 5
bind -r -Tnav M-k resize-pane -U 5
bind -r       M-k resize-pane -U 5
bind -r -Tnav M-l resize-pane -R 10
bind -r       M-l resize-pane -R 10
# keybinds: resize-pane }}}

# {{{ keybinds: swap-window
bind -r "<" swap-window -d -t -1
bind -r ">" swap-window -d -t +1
# keybinds: swap-window }}}

bind c new-window -c "#{pane_current_path}"

set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'

# {{{ plugin: tmux-yank
set -g @yank_action 'copy-pipe'

set -g @plugin 'tmux-plugins/tmux-yank'
# plugin: tmux-yank }}}

# {{{ plugin: tmux-thumbs
set -g @thumbs-unique yes
set -g @thumbs-command 'tmux set-buffer {} && echo -n {} | xsel -i --clipboard'
set -g @thumbs-upcase-command 'tmux set-buffer {} && echo -n {} | xsel -i && tmux paste-buffer'

set -g @plugin 'fcsonline/tmux-thumbs'
# plugin: tmux-thumbs }}}

# {{{ block: appearance

set -g default-terminal "tmux-256color"
set -ga terminal-overrides ",*-256color*:Tc"

set -g display-panes-active-colour "brightwhite"
set -g display-panes-colour "black"
set -g message-style "bg=black,fg=brightwhite"
set -g message-command-style "bg=black,fg=brightwhite"
set -g status-style "bg=black,fg=brightwhite"

set -gw clock-mode-colour "blue"
set -gw pane-active-border-style "fg=magenta"
set -gw pane-border-style "bg=black,fg=brightwhite"
set -gw window-status-activity-style "fg=blue"
set -gw window-status-bell-style "fg=yellow"
set -gw window-status-current-style "bg=green,fg=black"
set -gw window-status-last-style "fg=green"
set -gw window-status-style "bg=black,fg=brightwhite"

set -g window-status-format " #F#I:#W "
set -g window-status-current-format " #F#I:#W "
set -g window-status-separator ""
set -g status-left " #S "
set -g status-left-style "bg=blue,fg=black bold dim"
set -g status-right "%Y-%m-%d %H:%M #{tmux_mode_indicator}"

# {{{ plugin: tmux-mode-indicator
set -g @mode_indicator_prefix_mode_style "bg=blue,fg=black"
set -g @mode_indicator_copy_mode_style "bg=yellow,fg=black"
set -g @mode_indicator_sync_mode_style "bg=red,fg=black"
set -g @mode_indicator_empty_mode_style "bg=cyan,fg=black"

set -g @plugin 'MunifTanjim/tmux-mode-indicator'
# plugin: tmux-mode-indicator }}}

# block: appearance }}}

# {{{ plugin: tmux-suspend
set -g @suspend_on_resume_command "tmux \
  set -gq status-left-style 'bg=blue,fg=black bold dim' \\; \
  set -ugq '@mode_indicator_custom_prompt' \\; \
  set -ugq '@mode_indicator_custom_mode_style'"

set -g @suspend_on_suspend_command "tmux \
  set -gq status-left-style 'bg=brightblack,fg=black bold dim' \\; \
  set -gq '@mode_indicator_custom_prompt' ' ---- ' \\; \
  set -gq '@mode_indicator_custom_mode_style' 'bg=brightblack,fg=black'"

set -g @plugin 'MunifTanjim/tmux-suspend'
# plugin: tmux-suspend }}}

# {{{ ssh
if-shell 'test -n "$SSH_CLIENT" -o -n "$SSH_TTY"' {
  set -g status-right "#{tmux_mode_indicator}"
}
# ssh }}}

# {{{ tpm
set-environment -g TMUX_PLUGIN_MANAGER_PATH "${HOME}/.tmux/plugins"
# setup automagically
if-shell 'test ! -d ~/.tmux/plugins/tpm' "run-shell '\
  git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm && \
  ~/.tmux/plugins/tpm/bin/install_plugins'"
# initialize
run-shell -b '~/.tmux/plugins/tpm/tpm'
# tpm }}}
